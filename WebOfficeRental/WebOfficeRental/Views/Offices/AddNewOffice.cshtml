@using WebOfficeRental.Models
@model OfficeVM
@{
    ViewBag.Title = "Thêm văn phòng";
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
}

@section styles {
    @Styles.Render("~/Content/dropzonescss")
    <link href="~/Content/admin/vendor/chosen/chosen.min.css" rel="stylesheet" />
    <style>
        #UploadPhoto .dz-preview {
            display: inline-block!important;
        }
    </style>
}
<script src="~/Scripts/ckeditor/ckeditor.js"></script>

@section PageTitleHeader {
    <div class="page-header">
        <h3><i class="fa fa-building-o  fa-2x fa-color-red"></i> @ViewBag.Title</h3>
    </div>
    @if (TempData["Updated"] != null)
    {
        <div class="alert alert-success alert-dismissible fade in" role="alert">
            <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                <span aria-hidden="true">×</span>
            </button>
            @Html.Raw(TempData["Updated"])
        </div>
    }
    @if (TempData["Errored"] != null)
    {
        <div class="alert alert-danger alert-dismissible fade in" role="alert">
            <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                <span aria-hidden="true">×</span>
            </button>
            @Html.Raw(TempData["Errored"])
        </div>
    }
}

<div class="row">
    <div class="col-lg-12">
        <div class="panel panel-default box box-primary">
            <div class="panel-heading">
                <h3 class="panel-title">Vui lòng nhập đầy đủ các trường có dấu <span class="color-red">(*)</span></h3>
            </div>
            <div class="panel-body">
                @using (Html.BeginForm("AddNewOffice", "Offices", FormMethod.Post, htmlAttributes: new { @class = "form-horizontal", role = "form", @id = "add-new-ofice" }))
                {
                    @Html.AntiForgeryToken()
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                    <div class="form-group">
                        <div class="col-md-6">
                            <button class="btn btn-primary">
                                <i class="fa fa-plus"></i> Thêm mới
                            </button>
                            <span class="btn btn-danger" onclick="gotoUrl('@Url.RouteUrl("AdminAddOffice")')"><i class="fa fa-close"></i> Hủy bỏ</span>
                        </div>
                    </div>

                    <!-- Nav tabs -->
                    <ul class="nav nav-tabs" role="tablist">
                        <li role="presentation" class="active">
                            <a href="#office_ttvp" aria-controls="office_ttvp" role="tab" data-toggle="tab">Thông tin văn phòng</a>
                        </li>
                        <li role="presentation">
                            <a href="#office_ptvp" aria-controls="office_ptvp" role="tab" data-toggle="tab">Hình ảnh văn phòng</a>
                        </li>
                        <li role="presentation">
                            <a href="#office_content" aria-controls="office_content" role="tab" data-toggle="tab">Nội dung mô tả thêm</a>
                        </li>
                        <li role="presentation">
                            <a href="#office_dvvp" aria-controls="office_dvvp" role="tab" data-toggle="tab">Dịch vụ văn phòng</a>
                        </li>
                    </ul>

                    <!-- Tab panes -->
                    <div class="tab-content" style="margin-top: 10px;">
                        <div role="tabpanel" class="tab-pane active" id="office_ttvp">
                            <div class="form-group">
                                @Html.LabelFor(model => model.buiding_id, htmlAttributes: new { @class = "control-label col-md-4 required-after" })
                                <div class="col-md-6">

                                    <select class="form-control" name="buiding_id" id="buiding_id" data-val="true"
                                            data-val-required="Vui lòng chọn tòa nhà"
                                            aria-required="true" aria-describedby="buiding_id-error" aria-invalid="true">
                                        <option value=''>--Chọn tòa nhà--</option>

                                    </select>
                                    @Html.ValidationMessageFor(model => model.buiding_id, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.office_name, htmlAttributes: new { @class = "control-label col-md-4 required-after" })
                                <div class="col-md-6">
                                    @Html.TextBoxFor(model => model.office_name, htmlAttributes: new { @class = "form-control", placeholder = "Nhập tên văn phòng" })
                                    @Html.ValidationMessageFor(model => model.office_name, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.office_type, htmlAttributes: new { @class = "control-label col-md-4 required-after" })
                                <div class="col-md-6">
                                    <select class="form-control" name="office_type" id="office_type" data-val="true" data-val-required="Loại phòng cho thuê không được để trống." aria-required="true" aria-describedby="office_type-error" aria-invalid="true">
                                        <option value=''>--Chọn Loại phòng cho thuê--</option>
                                        <option value='1'>Văn phòng cho thuê</option>
                                        <option value='2'>Văn phòng trọn gói</option>
                                        <option value='3'>Phòng họp</option>
                                        <option value='4'>Văn phòng ảo</option>
                                        <option value='5'>Chỗ ngồi cố định</option>
                                    </select>
                                    @Html.ValidationMessageFor(model => model.office_type, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.office_new_type, htmlAttributes: new { @class = "control-label col-md-4 required-after" })
                                <div class="col-md-6">
                                    <select class="form-control" name="office_new_type" id="office_new_type" data-val="true"
                                            data-val-required="Loại tin không được để trống."
                                            aria-required="true" aria-describedby="office_new_type-error" aria-invalid="true">
                                        <option value=''>--Chọn loại tin--</option>
                                        <option value='1'>-Tin thường</option>
                                        <option value='2'>-Tin nổi bật-</option>
                                    </select>
                                    @Html.ValidationMessageFor(model => model.office_new_type, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.office_address, htmlAttributes: new { @class = "control-label col-md-4 required-after" })
                                <div class="col-md-6">
                                    @Html.TextBoxFor(model => model.office_address, htmlAttributes: new { @class = "form-control", placeholder = "Nhập địa chỉ văn phòng" })
                                    @Html.ValidationMessageFor(model => model.office_address, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            @Html.HiddenFor(m => m.office_price_public)
                            <div class="form-group">
                                @Html.LabelFor(model => model.office_price_public, htmlAttributes: new { @class = "control-label col-md-4 required-after" })
                                <div class="col-md-3">
                                    <select class="form-control" name="giaca" id="giaca" onchange="getGiaCa();">
                                        <option value="">-Giá thuê-</option>
                                        <option value="-1">-Giá thỏa thuận</option>
                                        <option value="1">-Giá công khai</option>
                                    </select>
                                    @Html.ValidationMessageFor(model => model.office_price_public, "", new { @class = "text-danger" })
                                </div>
                                <div class="col-md-3" id="HienNhapGia" style="display: none;">
                                    <input type="number" name="GiaCongKhai" id="GiaCongKhai" class="form-control" placeholder="Nhập giá cho thuê" onchange="setPricePublic();" />
                                </div>

                            </div>


                            <div class="form-group">
                                @Html.LabelFor(model => model.office_hotmail, htmlAttributes: new { @class = "control-label col-md-4" })
                                <div class="col-md-6">
                                    @Html.TextBoxFor(model => model.office_hotmail, htmlAttributes: new { @class = "form-control", placeholder = "Nhập địa chỉ Email văn phòng" })
                                    @Html.ValidationMessageFor(model => model.office_hotmail, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.office_hotline, htmlAttributes: new { @class = "control-label col-md-4" })
                                <div class="col-md-6">
                                    @Html.TextBoxFor(model => model.office_hotline, htmlAttributes: new { @class = "form-control", placeholder = "Nhập số hotline văn phòng" })
                                    @Html.ValidationMessageFor(model => model.office_hotline, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.office_fanpage, htmlAttributes: new { @class = "control-label col-md-4" })
                                <div class="col-md-6">
                                    @Html.TextBoxFor(model => model.office_fanpage, htmlAttributes: new { @class = "form-control", placeholder = "Nhập Fan page văn phòng" })
                                    @Html.ValidationMessageFor(model => model.office_fanpage, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.office_acreage, htmlAttributes: new { @class = "control-label col-md-4 required-after" })
                                <div class="col-md-6">
                                    @Html.TextBoxFor(model => model.office_acreage, htmlAttributes: new { @class = "form-control", placeholder = "Nhập diện tích văn phòng", type = "number" })
                                    @Html.ValidationMessageFor(model => model.office_acreage, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.office_door, htmlAttributes: new { @class = "control-label col-md-4 required-after" })
                                <div class="col-md-6">
                                    @Html.TextBoxFor(model => model.office_door, htmlAttributes: new { @class = "form-control", placeholder = "Nhập diện tích văn phòng", type = "number" })
                                    @Html.ValidationMessageFor(model => model.office_door, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.office_table, htmlAttributes: new { @class = "control-label col-md-4 required-after" })
                                <div class="col-md-6">
                                    @Html.TextBoxFor(model => model.office_table, htmlAttributes: new { @class = "form-control", placeholder = "Nhập diện tích văn phòng", type = "number" })
                                    @Html.ValidationMessageFor(model => model.office_table, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div role="tabpanel" class="tab-pane"  id="office_ptvp">
                            <div class="form-group">
                                @Html.LabelFor(m => m.office_photo, new { @class = "col-md-4 control-label required-after" })
                                <div class="col-md-6">
                                    <div id="divoffice_photo" class="upanh">
                                        <a class="closed"><i class="fa fa-close fa-2x"></i></a>
                                        @Html.HiddenFor(m => m.office_photo)
                                        <i class="fa fa-plus fa-3x"></i>
                                    </div>
                                    <div id="dzoffice_photo" class="dropzone undropzone">
                                    </div>
                                    @Html.ValidationMessageFor(m => m.office_photo, "", new { @class = "text-danger" })
                                    <span class="help-block">
                                        Nên chọn hình có kích thước 1x1, 500x500px, 400x310px
                                        và chọn hình ảnh có dung lượng không vượt quá 12 Mb.
                                    </span>
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(m => m.office_photo_slider, new { @class = "col-md-4 control-label" })
                                <div class="col-md-6">
                                    <div id="divoffice_photo_slider" class="upanh" style="width: 100%;">
                                        <a class="closed"><i class="fa fa-close fa-2x"></i></a>
                                        @Html.HiddenFor(m => m.office_photo_slider)
                                        <i class="fa fa-plus fa-3x"></i>
                                    </div>
                                    <div id="dzoffice_photo_slider" class="dropzone undropzone">
                                    </div>
                                    @*@Html.ValidationMessageFor(m => m.office_photo_slider, "", new { @class = "text-danger" })*@
                                    <span class="help-block">
                                        Nên chọn hình có kích thước 16:9, 1920x790px và
                                        chọn hình ảnh có dung lượng không vượt quá 12 Mb.
                                    </span>
                                </div>
                            </div>
                        </div>
                        <div role="tabpanel" class="tab-pane" id="office_content">
                            <div class="form-group">
                                <div class="col-md-12">
                                    @Html.TextAreaFor(m => m.office_other_descriptions, new { @class = "form-control", @rows = "5" })
                                </div>
                            </div>

                            <div id="UploadPhoto" class="dropzone">
                                <div class="dz-default dz-message" data-dz-message>
                                    <span>Chọn ảnh cần tải lên</span>
                                </div>
                            </div>

                        </div>
                        <div id="office_dvvp" class="tab-pane">
                            <div class="form-group">
                                @*<label class="col-md-4 control-label">Dịch vụ văn phòng</label>*@
                                <div class="col-md-12">
                                    <select multiple class="form-control chosen-select" name="dichvuvp" id="dichvuvp" data-placeholder="Chọn dịch vụ văn phòng" style="width: 100%;"></select>
                                    <span class="help-block">Có thể chọn nhiều dịch vụ cho văn phòng.</span>
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-6">
                            <button class="btn btn-primary">
                                <i class="fa fa-plus"></i> Thêm mới
                            </button>
                            <span class="btn btn-danger" onclick="gotoUrl('@Url.RouteUrl("AdminAddOffice")')"><i class="fa fa-close"></i> Hủy bỏ</span>
                        </div>
                    </div>
                }


            </div>
        </div>
    </div>
</div>

@if (ViewBag.office_type != null)
{
    <script>

        $(document).ready(function () {
            setTimeout(function () {
                $('#office_type').val('@ViewBag.office_type');
            }, 500)
        })
    </script>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/dropzonescripts")
    <script src="~/Content/admin/vendor/chosen/chosen.jquery.min.js"></script>
    <script src="~/Content/admin/js/custom.js"></script>

    <script>
        $.ajax({
            url: "/Offices/getToaNha",
            cache: false
        }).done(function (html) {
            //$("#buiding_id").html("" + html);
            $("#buiding_id").append(html);
            @if (@ViewBag.buiding_id != null) {
                <text>$('#buiding_id').val('@ViewBag.buiding_id');</text>}
        });

        
        $.ajax({
            url: "/Offices/getDichvuvp",
            cache: false
        }).done(function (html) {
            $("#dichvuvp").append(html);
            $('#dichvuvp').chosen().trigger("chosen:updated");
        });

        function getGiaCa() {
            if ($('#giaca').val() !== "") {
                if ($('#giaca').val() === '-1') {
                    $('#office_price_public').val('-1');
                    $('#HienNhapGia').fadeOut();
                    $('#GiaCongKhai').val('');
                } else if ($('#giaca').val() === '1') {
                    $('#office_price_public').val('');
                    $('#HienNhapGia').fadeIn();
                }
            }
        }

        function setPricePublic() {
            if ($('#GiaCongKhai').val() !== "") {
                var $gia = $('#GiaCongKhai').val();
                $('#office_price_public').val($gia);
            };
        }

        $.validator.setDefaults({
            ignore: ""
        });
        $(document).ready(function () {

            Dropzone.autoDiscover = false;
            UploadImage('/Load/SaveImage', '#dzoffice_photo', '#divoffice_photo', '#office_photo', 12);
            UploadImage('/Load/SaveImageBig', '#dzoffice_photo_slider', '#divoffice_photo_slider', '#office_photo_slider', 12);
            $('.closed').click(function (e) {
                e.preventDefault();
                if ($(this).siblings('input').val() !== "") {
                    if (confirm("Bạn chắc chắn muốn xóa ảnh?")) {
                        $(this).parent('.upanh').css('background-image', 'url("/Content/img/no-image.png")');
                        $(this).siblings('input').val('');
                    }
                }
            });

            CKEDITOR.replace('office_other_descriptions', {
                // Define the toolbar groups as it is a more accessible solution.
                toolbarGroups: [
                    { "name": "basicstyles", "groups": ["basicstyles"] },
                    { "name": "links", "groups": ["links"] },
                    { "name": "paragraph", "groups": ["list", "blocks"] },
                    { "name": "document", "groups": ["mode"] },
                    { "name": "insert", "groups": ["insert"] },
                    { "name": "styles", "groups": ["styles"] },
                    { "name": "about", "groups": ["about"] }
                ],
                // Remove the redundant buttons from toolbar groups defined above.
                removeButtons: 'Underline,Strike,Subscript,Superscript,Anchor,Styles,Specialchar',
                height: '200px'
            })

            var upload2 = new Dropzone("#UploadPhoto", {
                url: "/Load/UploadPhoto",
                addRemoveLinks: true,
                maxFiles: 5,
                maxFilesize: 10,
                uploadMultiple: true,
                acceptedFiles: "image/*",
                dictFallbackMessage: "Trình duyệt của bạn không hỗ trợ kéo thả tệp để tải lên.",
                dictFallbackText: "Please use the fallback form below to upload your files like in the olden days.",
                dictFileTooBig: "Tệp có dung lượng quá lớn ({{filesize}}MiB). Dung lượng cho phép: {{maxFilesize}}MiB.",
                dictInvalidFileType: "Tệp bạn chọn không được phép tải lên.",
                dictResponseError: "Server responded with {{statusCode}} code.",
                dictRemoveFile: "Loại bỏ tệp tin",
                dictMaxFilesExceeded: "Bạn không thể tải lên quá 10 hình.",
                success: function (file, response) {
                    var imgPath = response.Message;
                    if (imgPath !== "") {
                        var oEditor = CKEDITOR.instances.office_other_descriptions;
                        var img = "<img style='width: 200px;' src='" + imgPath + "'/>";
                        var newElement = CKEDITOR.dom.element.createFromHtml(img, oEditor.document);
                        oEditor.insertElement(newElement);
                        file.previewElement.classList.add("dz-success");
                    }
                },
                error: function (file, response) {
                    file.previewElement.classList.add("dz-error");
                    $(file.previewElement).find('.dz-error-message').text(response);
                },
                HiddenFilesPath: 'body'
            });

        })


    </script>

}